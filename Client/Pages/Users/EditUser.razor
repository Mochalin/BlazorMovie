@page "/users/edit/{UserId}"
@inject IUsersRepository userRepository
@inject IDisplayMessage displayMessage

@using BlazorDemoUdemy.Client.Helpers

<h3>Edit user</h3>

<form class="form-inline">
    <select class="form-control mb-2 mr-sm-2" @bind="selectedRole">
        <option value="0">--Select a role--</option>
        @foreach (var role in roles)
        {
           <option value="@role.RoleName">@role.RoleName</option> 
        }
    </select>

    <button class="btn btn-info mb-2 mr-sm-2" @onclick="AssignRole">Assign Role</button>
    <button class="btn btn-danger mb-2 mr-sm-2" @onclick="RemoveRole">Remove Role</button>
</form>

@code {
    [Parameter] public string UserId {get; set;}
    private List<RoleDTO> roles = new List<RoleDTO>();
    private string selectedRole ="0";
    
    protected override async Task OnInitializedAsync() {
        roles = await userRepository.GetRoles();
    }

    private async Task AssignRole(){
        if (selectedRole == "0"){
            await displayMessage.DisplayErrorMessage("You must select a role");
            return;
        }
        await userRepository.AssignRole(new EditRoleDTO(){RoleName = selectedRole, UserId = UserId});
        await displayMessage.DisplaySuccessMessage("Role assigned");
    }

      private async Task RemoveRole(){
        if (selectedRole == "0"){
            await displayMessage.DisplayErrorMessage("You must select a role");
            return;
        }
        await userRepository.RemoveRole(new EditRoleDTO(){RoleName = selectedRole, UserId = UserId});
        await displayMessage.DisplaySuccessMessage("Role removed");
    }
}